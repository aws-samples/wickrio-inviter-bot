/*!
 * mergician
 * v1.0.3
 * https://jhildenbiddle.github.io/mergician/
 * (c) 2022 John Hildenbiddle
 * MIT license
 */
var mergician=(()=>{var E=(r,s)=>()=>(s||r((s={exports:{}}).exports,s),s.exports);var I=E((_,w)=>{function m(...r){let s={};return r.forEach(e=>{e.forEach(u=>{s[u]=u in s?++s[u]:1})}),s}function C(...r){let s=m(...r);return Object.keys(s).filter(e=>s[e]>1)}function D(...r){return r.reduce((s,e)=>s.filter(Set.prototype.has,new Set(e)))}function F(...r){let s=m(...r);return Object.keys(s).filter(e=>s[e]===1)}function N(...r){let s=m(...r);return Object.keys(s).filter(e=>s[e]<r.length)}function P(r){return Boolean(r&&r.constructor.name==="Object")}w.exports={countOccurrences:m,getInMultiple:C,getInAll:D,getNotInMultiple:F,getNotInAll:N,isObject:P}});var B=E((z,O)=>{var{getInMultiple:S,getInAll:U,getNotInMultiple:x,getNotInAll:q,isObject:k}=I(),p={onlyKeys:[],skipKeys:[],onlyCommonKeys:!1,onlyUniversalKeys:!1,skipCommonKeys:!1,skipUniversalKeys:!1,appendArrays:!1,prependArrays:!1,dedupArrays:!1,sortArrays:!1,filter:Function.prototype,beforeEach:Function.prototype,afterEach:Function.prototype};function M(r){return k(r)?"get"in r&&typeof r.get=="function"||"set"in r&&typeof r.set=="function"||"value"in r&&("writable"in r||"enumerable"in r||"configurable"in r):!1}function V(...r){let s=arguments.length===1?arguments[0]:{},e={...p,...s},u=new Map,A=new Map,K=typeof e.sortArrays=="function"?e.sortArrays:void 0,d=0;function g(...a){let l;a.length>1&&(e.onlyCommonKeys?l=S(...a.map(t=>Object.keys(t))):e.onlyUniversalKeys?l=U(...a.map(t=>Object.keys(t))):e.skipCommonKeys?l=x(...a.map(t=>Object.keys(t))):e.skipUniversalKeys&&(l=q(...a.map(t=>Object.keys(t))))),!l&&e.onlyKeys.length&&(l=e.onlyKeys),l&&l!==e.onlyKeys&&e.onlyKeys.length&&(l=l.filter(t=>e.onlyKeys.includes(t)));let b=a.reduce((t,f)=>{let c=l||Object.keys(f);e.skipKeys.length&&(c=c.filter(h=>e.skipKeys.indexOf(h)===-1));for(let h=0;h<c.length;h++){let o=c[h];if(!(o in f))continue;let v=f[o],y=t[o],n=v;if(e.filter!==p.filter){let i=e.filter({depth:d,key:o,srcObj:f,srcVal:n,targetObj:t,targetVal:y});if(i!==void 0&&!i)continue}if(e.beforeEach!==p.beforeEach){let i=e.beforeEach({depth:d,key:o,srcObj:f,srcVal:n,targetObj:t,targetVal:y});n=i!==void 0?i:n}if(Array.isArray(n)){if(n=[...n],Array.isArray(y)&&(e.appendArrays?n=[...y,...n]:e.prependArrays&&(n=[...n,...y])),e.dedupArrays)if(e.afterEach!==p.afterEach)n=[...new Set(n)];else{let i=u.get(t);i&&!i.includes(o)?i.push(o):u.set(t,[o])}if(e.sortArrays)if(e.afterEach!==p.afterEach)n=n.sort(K);else{let i=A.get(t);i&&!i.includes(o)?i.push(o):A.set(t,[o])}}else k(n)&&!M(n)&&(d++,k(y)?n=g(y,n):n=g(n),d--);if(e.afterEach!==p.afterEach){let i=e.afterEach({depth:d,key:o,mergeVal:n,srcObj:f,targetObj:t});n=i!==void 0?i:n}if(M(n))n.configurable="configurable"in n?n.configurable:!0,n.enumerable="enumerable"in n?n.enumerable:!0,"value"in n&&!("writable"in n)&&(n.writable=!0),Object.defineProperty(t,o,n);else{let i=Object.getOwnPropertyDescriptor(f,o);"get"in i?Object.defineProperty(t,o,i):t[o]=n}}return t},{});for(let[t,f]of u.entries())for(let c of f)t[c]=[...new Set(t[c])];for(let[t,f]of A.entries())for(let c of f)t[c].sort(K);return b}return arguments.length===1?function(...a){return arguments.length===1?V({...e,...a[0]}):g(...a)}:g(...arguments)}O.exports=V});return B();})();
//# sourceMappingURL=mergician.min.js.map
